name: build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync

      - name: Test with pytest
        run: uv run pytest --cov coretact

  build:
    runs-on: self-hosted

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract branch name
        id: extract_branch
        run: |
          if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
          elif [[ "${GITHUB_REF}" == refs/pull/* ]]; then
            BRANCH_NAME=$(echo ${GITHUB_REF} | sed 's#refs/pull/##; s#/merge##')
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            BRANCH_NAME=${GITHUB_REF#refs/tags/}
          else
            BRANCH_NAME=${GITHUB_REF}
          fi
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_OUTPUT

      - name: Set image tags
        id: set_tags
        run: |
          TAGS="ghcr.io/${{ github.repository }}:${{ github.sha }} ghcr.io/${{ github.repository }}:$BRANCH_NAME"
          if [ "$BRANCH_NAME" == "main" ]; then
            TAGS="$TAGS ghcr.io/${{ github.repository }}:latest"
          fi
          echo "tags=$TAGS" >> "$GITHUB_OUTPUT"

      - name: Build coretact image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ghcr.io/${{ github.repository }}
          platforms: linux/amd64
          tags: ${{ steps.set_tags.outputs.tags }}
          containerfiles: ./Containerfile
          build-args: |
            release=coretact@${{ steps.extract_branch.outputs.branch_name }}

      - name: Push image
        uses: redhat-actions/push-to-registry@v2
        with:
          tags: ${{ steps.build_image.outputs.tags }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: self-hosted
    needs:
      - build
      - test
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy with Podman Play
        run: deploy/deploy.sh
        env:
          IMAGE: ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          DISCORD_BOT_OWNER_ID: ${{ secrets.DISCORD_BOT_OWNER_ID }}
